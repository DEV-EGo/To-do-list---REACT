[{"/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/reportWebVitals.js":"1","/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/App.js":"2","/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/Todo.js":"3","/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/firebase.js":"4","/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/index.js":"5"},{"size":362,"mtime":1611194879930,"results":"6","hashOfConfig":"7"},{"size":1544,"mtime":1611251943402,"results":"8","hashOfConfig":"7"},{"size":1256,"mtime":1611364730410,"results":"9","hashOfConfig":"7"},{"size":483,"mtime":1611251945048,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1611194879929,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1353nej",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/reportWebVitals.js",[],["27","28"],"/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/App.js",["29"],"import React, { useState, useEffect }from 'react';\nimport Todo from './Todo';\nimport { Button, FormControl, input, InputLabel } from '@material-ui/core';\nimport './App.css';\nimport db from './firebase';\nimport firebase from 'firebase'\n\nfunction App() {\n  const [todos, setTodos] = useState(['abc','def' ]);\n  const [input, setInput] = useState('');\n\n  // when the app loads, we need to listen to the database and fetch new todos as they get added/removed\n  useEffect(() =>{\n    // this line of code ..fires when the app.js loads\n    db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({id: doc.id ,todo: doc.data().todo})))\n    })\n  }, []);\n\n  const addTodo =(event) => {\n    // this will work when we click the button\n    event.preventDefault();\n\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    setInput(''); // clears up the input after clicking add todo button\n  }\n\n  return (\n    <div className=\"App\">\n\n      <h1>Hello Devs ðŸš€</h1>\n\n    <form>\n\n      <FormControl>\n        <InputLabel> âœ… Write todo</InputLabel>\n        <input value = {input} onChange = { event => setInput(event.target.value)}/>\n      </FormControl>\n\n      <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">\n      Add to do \n      </Button>\n    </form>\n\n    <ul>\n      {todos.map(todo => (\n        <Todo todo={todo}/>\n      ))}\n    </ul>\n\n    </div>\n  );\n}\n\nexport default App;\n",["30","31"],"/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/Todo.js",["32"],"import React, { useState } from 'react'\nimport './Todo.css';\nimport {  List, Button, ListItemAvatar, ListItem, ListItemText, Modal } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport db from './firebase.js';\n\nfunction Todo(props) {\n    const [open,setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <>\n        <Modal\n            open= {open}\n            onClose={e => setOpen(false)}\n        >\n            <div> \n                <h1>I am a modal this works</h1>\n                <Button onClick={e => setOpen(false)}></Button>\n            </div>\n        </Modal>\n\n        <List>\n            <ListItem>\n                <ListItemAvatar>  \n                </ListItemAvatar>\n                <ListItemText primary= {props.todo.todo} secondary=\"Dummy deadline\" />\n            </ListItem>\n            <Button onClick={e => setOpen(true)}>Edit</Button>\n            <DeleteForeverIcon onClick={event => db.collection('todos').doc(props.todo.id).delete()}/>\n        </List>\n        </>\n    )\n}\n\nexport default Todo\n// type RFCE (react functional componet with an export) shortcut\n// PROPS are propertys that allows to differetiate one component from another","/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/firebase.js",[],"/Users/Edwin/Desktop/GITHUB-REPOS-PROJECTS/To-do-list---REACT/todo_app/src/index.js",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":31,"nodeType":"41","messageId":"42","endLine":3,"endColumn":36},{"ruleId":"35","replacedBy":"43"},{"ruleId":"37","replacedBy":"44"},{"ruleId":"39","severity":1,"message":"45","line":10,"column":11,"nodeType":"41","messageId":"42","endLine":10,"endColumn":21},{"ruleId":"35","replacedBy":"46"},{"ruleId":"37","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'input' is defined but never used.","Identifier","unusedVar",["48"],["49"],"'handleOpen' is assigned a value but never used.",["48"],["49"],"no-global-assign","no-unsafe-negation"]